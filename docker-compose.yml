version: '3.9'

services:
  api-cnpj1:
    image: jpversianiladeia/api-cnpj:latest
    hostname: api-cnpj1
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_MAX_CONNECTIONS=${DATABASE_MAX_CONNECTIONS}
      - CACHE_HOST=${CACHE_HOST}
      - GUNICORN_BIND=${GUNICORN_BIND}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS}
      - GUNICORN_KEEPALIVE=${GUNICORN_KEEPALIVE}
      - GUNICORN_FORWARDED_ALLOW_IPS=${GUNICORN_FORWARDED_ALLOW_IPS}
    depends_on:
      db-postgresql:
        condition: service_healthy
      cache-redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.6GB'
    networks:
      - jp-network

  api-cnpj2:
    image: jpversianiladeia/api-cnpj:latest
    hostname: api-cnpj2
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_MAX_CONNECTIONS=${DATABASE_MAX_CONNECTIONS}
      - CACHE_HOST=${CACHE_HOST}
      - GUNICORN_BIND=${GUNICORN_BIND}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS}
      - GUNICORN_KEEPALIVE=${GUNICORN_KEEPALIVE}
      - GUNICORN_FORWARDED_ALLOW_IPS=${GUNICORN_FORWARDED_ALLOW_IPS}
    depends_on:
      db-postgresql:
        condition: service_healthy
      cache-redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.6GB'
    networks:
      - jp-network

  db-postgresql:
    image: postgres:16.3
    command: postgres -c 'max_connections=400'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - /d/Volume-Postgres-CNPJ-5:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1.3GB'
    networks:
      - jp-network

  cache-redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.5GB'
    networks:
      - jp-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-cnpj1
      - api-cnpj2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.1GB'
    networks:
      - jp-network

networks:
  jp-network:
